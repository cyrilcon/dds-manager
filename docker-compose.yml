services:
  django:
    image: dds_manager_django_image
    container_name: dds_manager_django
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app/dds_manager
    command: sh -c "python manage.py migrate && gunicorn dds_manager.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dds_manager
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/usr/src/app/dds_manager/static
    stop_signal: SIGTERM
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: 10

  postgres:
    image: postgres:17-alpine
    container_name: dds_manager_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - dds_manager_postgres_volume:/var/lib/postgresql/data
    networks:
      - dds_manager
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: 10

  nginx:
    image: nginx:latest
    container_name: dds_manager_nginx
    restart: always
    networks:
      - dds_manager
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/src/app/dds_manager/static
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - django

networks:
  dds_manager:
    name: dds_manager
    driver: bridge

volumes:
  dds_manager_postgres_volume:
    name: dds_manager_postgres_volume
  static_volume:
    name: static_volume
